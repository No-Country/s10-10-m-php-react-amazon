import {
  require_shim
} from "./chunk-VNK3BX5C.js";
import {
  require_react
} from "./chunk-ZGRSIX2Q.js";
import {
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/wouter/react-deps.js
var React = __toESM(require_react(), 1);
var import_react = __toESM(require_react(), 1);

// node_modules/wouter/use-sync-external-store.js
var import_shim = __toESM(require_shim(), 1);

// node_modules/wouter/react-deps.js
var {
  useEffect,
  useLayoutEffect,
  useRef,
  useInsertionEffect: useBuiltinInsertionEffect
} = React;
var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
var useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;
var useInsertionEffect = useBuiltinInsertionEffect || useIsomorphicLayoutEffect;
var useEvent = (fn) => {
  const ref = useRef([fn, (...args) => ref[0](...args)]).current;
  useInsertionEffect(() => {
    ref[0] = fn;
  });
  return ref[1];
};

// node_modules/wouter/use-location.js
var relativePath = (base = "", path = location.pathname) => !path.toLowerCase().indexOf(base.toLowerCase()) ? path.slice(base.length) || "/" : "~" + path;
var absolutePath = (to, base = "") => to[0] === "~" ? to.slice(1) : base + to;
var eventPopstate = "popstate";
var eventPushState = "pushState";
var eventReplaceState = "replaceState";
var eventHashchange = "hashchange";
var events = [
  eventPopstate,
  eventPushState,
  eventReplaceState,
  eventHashchange
];
var subscribeToLocationUpdates = (callback) => {
  for (const event of events) {
    addEventListener(event, callback);
  }
  return () => {
    for (const event of events) {
      removeEventListener(event, callback);
    }
  };
};
var useLocationProperty = (fn, ssrFn) => (0, import_shim.useSyncExternalStore)(subscribeToLocationUpdates, fn, ssrFn);
var currentSearch = () => location.search;
var useSearch = () => useLocationProperty(currentSearch);
var currentPathname = () => location.pathname;
var usePathname = ({ ssrPath } = {}) => useLocationProperty(
  currentPathname,
  ssrPath ? () => ssrPath : currentPathname
);
var navigate = (to, { replace = false } = {}) => history[replace ? eventReplaceState : eventPushState](null, "", to);
var useLocation = (opts = {}) => [
  relativePath(opts.base, usePathname(opts)),
  useEvent((to, navOpts) => navigate(absolutePath(to, opts.base), navOpts))
];
var use_location_default = useLocation;
if (typeof history !== "undefined") {
  for (const type of [eventPushState, eventReplaceState]) {
    const original = history[type];
    history[type] = function() {
      const result = original.apply(this, arguments);
      const event = new Event(type);
      event.arguments = arguments;
      dispatchEvent(event);
      return result;
    };
  }
}

export {
  useIsomorphicLayoutEffect,
  useInsertionEffect,
  useEvent,
  import_react,
  events,
  useLocationProperty,
  useSearch,
  usePathname,
  navigate,
  use_location_default
};
//# sourceMappingURL=chunk-FD7LJ3UO.js.map
